---
import { Image } from "@astrojs/image/components"
import { Icon } from "astro-icon"
import { getCollection } from "astro:content"
import localImage from "../knitting-gauge-formula.jpeg"
import squiggle from "../icons/squiggle.svg"
const squiggleUrl = `url("${squiggle}")`
const allFreePatterns = await getCollection("free-patterns")
const patternsByCategories = allFreePatterns.reduce(
  (accumulator, entry) => {
  if (entry.data.category) {
    const { category } = entry.data
    if (accumulator[category]) {
      accumulator[category].push(entry)
    } else {
      accumulator[category] = [entry]
    }
  }
  return accumulator
}, {})
// console.log(patternsByCategories)
let categories = allFreePatterns.map(e => e.data.category)
const set = new Set()
const uniqueCategories = []
categories.forEach(c => {
  if (!set.has(c)) {
    if (c === "sweater") {
      uniqueCategories.unshift(c)
    } else {
      uniqueCategories.push(c)
    }
    set.add(c)
  }
})
console.log(uniqueCategories)
const sweaterIndex = categories.findIndex(e => e === "sweater")
if (sweaterIndex) {
  const sweaterArr = categories.splice(sweaterIndex, 1)
  categories = [...sweaterArr, ... categories]
}
---
<!-- <Image src={localImage} alt="" /> -->
<div class="collection">
  <div class="collection-header">
    <h2 class="t-heading">Free patterns
    </h2>
    <p class="t-new-body">Knit with any <span class="highlight-text">yarn weight
    </span>, using <span class="highlight-text">your own gauge
    </span>.</p>
  </div>
  <div class="collection-aside">
    <ul>
      {uniqueCategories.map((c, index) => (
        <li>
          <button class={index === 0 ? "btn-underline" : ""}>
          {c}
          </button>
        </li>
      ))}
      </ul>
  </div>
  <div class="collection-content">
    {uniqueCategories.map(cat => {
      return (
      <div class={cat === "sweater" ? "is-active" : ""} data-collection-patterns={cat}>
        {patternsByCategories[cat].map(p => (
          <div class="pattern-card">
            <div class="card-thumbnail">
            <span class="object-fit">
              {p.data.coverImage && (
                <Image src={import(p.data.coverImage)} alt="" width={400} aspectRatio="1:1" />
              )}
            </span>
          </div>
          <div class="pattern-metadata">
            {p.data.title}
          </div>
          </div>

        ))}
      </div>
    )})}
  </div>
</div>

<style define:vars={{ squiggleUrl }}>
  .collection {
    display: flex;
    flex-wrap: wrap;
  }
  .collection-header {
    margin-bottom: var(--spacing-sizing-3);
    width: 100%;
  }
  .collection-aside {
    flex: 1;
  }
  .collection-aside ul li:not(:last-child) {
    margin-bottom: var(--spacing-sizing-2);
  }
  .collection-aside button {
    text-transform: capitalize;
  }
  .collection-content {
    width: 75%;
    flex: 5;
  }
  .collection-content [data-collection-patterns] {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--gutter-sm);
  }
  .collection-content [data-collection-patterns]:not(.is-active) {
    display: none;
  }
  .card-thumbnail img {
    height: auto;
    object-fit: cover;
    width: 100%;
  }
  .highlight-container {
    position: relative;
  }
  .btn-underline {
    position: relative;
  }
  .collection-aside button {
    transition: .4s;
  }
  .collection-aside .btn-underline {
    pointer-events: none;
  }
  .btn-underline::before {
    content: "";
    display: block;
    position: absolute;
    top: 100%;
    width: calc(100% - 1px);
    height: 3px;
    background: url("/wavy-line-cream.svg") center left repeat;
  }
  .light .btn-underline::before {
    filter: invert(90%);
  }
  .highlight {
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 140%;
  }
  .highlight svg {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: auto;
  }
  [astro-icon] path {
    fill: var(--brand-color-pink);
  }
  .highlight-text {
    background-image: var(--squiggleUrl);
    background-position-y: 100%;
    background-repeat: no-repeat;
    padding-bottom: var(--spacing-sizing-075);
  }
</style>